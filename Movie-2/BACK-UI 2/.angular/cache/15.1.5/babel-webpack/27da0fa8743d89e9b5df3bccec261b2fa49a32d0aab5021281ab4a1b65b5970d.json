{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"ng-angular-popup\";\nexport class AuthGuard {\n  constructor(auth, router, toast) {\n    this.auth = auth;\n    this.router = router;\n    this.toast = toast;\n  }\n  canActivate(route, state) {\n    if (this.auth.isLoggedIn()) {\n      return true;\n    } else {\n      this.toast.error({\n        detail: \"ERROR\",\n        summary: \"Please login first!\"\n      });\n      this.router.navigate(['login']);\n      return false;\n    }\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i3.NgToastService));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;;AASA,OAAM,MAAOA,SAAS;EACpBC,YAAoBC,IAAkB,EAAUC,MAAe,EAAUC,KAAsB;IAA3E,SAAI,GAAJF,IAAI;IAAwB,WAAM,GAANC,MAAM;IAAmB,UAAK,GAALC,KAAK;EAAmB;EAEjGC,WAAW,CACTC,KAA6B,EAC7BC,KAA0B;IAE1B,IAAG,IAAI,CAACL,IAAI,CAACM,UAAU,EAAE,EAAC;MAExB,OAAO,IAAI;KACZ,MACG;MACF,IAAI,CAACJ,KAAK,CAACK,KAAK,CAAC;QAACC,MAAM,EAAC,OAAO;QAAEC,OAAO,EAAC;MAAqB,CAAC,CAAC;MACjE,IAAI,CAACR,MAAM,CAACS,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;MAC/B,OAAO,KAAK;;EAEhB;;AAhBWZ,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;SAATA,SAAS;EAAAa,SAATb,SAAS;EAAAc,YAFR;AAAM","names":["AuthGuard","constructor","auth","router","toast","canActivate","route","state","isLoggedIn","error","detail","summary","navigate","factory","providedIn"],"sourceRoot":"","sources":["F:\\RUSHI PRACTICE ANGULAR\\JWT_AUTH_2\\BACK_UI\\src\\app\\gaurds\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { NgToastService } from 'ng-angular-popup';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private auth : AuthService, private router : Router, private toast : NgToastService){}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    \n    if(this.auth.isLoggedIn()){\n      \n      return true \n    }\n    else{\n      this.toast.error({detail:\"ERROR\", summary:\"Please login first!\"});\n      this.router.navigate(['login'])\n      return false;\n    }\n  }\n    \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}