{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = \"https://localhost:7034/api/User/\";\n    this.baseUrl2 = \"https://localhost:7034/api/Movie\";\n  }\n  getUsers() {\n    return this.http.get(this.baseUrl);\n  }\n  getMovies() {\n    return this.http.get(\"https://localhost:7034/api/Movie\");\n  }\n  getMovieById(id) {\n    return this.http.get(this.baseUrl2 + 'get-movie/' + id);\n  }\n}\nApiService.ɵfac = function ApiService_Factory(t) {\n  return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n};\nApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ApiService,\n  factory: ApiService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,UAAU;EAGrBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,YAAO,GAAU,kCAAkC;IACnD,aAAQ,GAAU,kCAAkC;EACpB;EAExCC,QAAQ;IACN,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAM,IAAI,CAACC,OAAO,CAAC;EACzC;EAEAC,SAAS;IACP,OAAO,IAAI,CAACJ,IAAI,CAACE,GAAG,CAAU,kCAAkC,CAAC;EACnE;EAEAG,YAAY,CAACC,EAAS;IAElB,OAAO,IAAI,CAACN,IAAI,CAACE,GAAG,CAAQ,IAAI,CAACK,QAAQ,GAAG,YAAY,GAACD,EAAE,CAAC;EAC/D;;AAhBUR,UAAU;mBAAVA,UAAU;AAAA;AAAVA,UAAU;SAAVA,UAAU;EAAAU,SAAVV,UAAU;EAAAW,YAFT;AAAM","names":["ApiService","constructor","http","getUsers","get","baseUrl","getMovies","getMovieById","id","baseUrl2","factory","providedIn"],"sourceRoot":"","sources":["F:\\RUSHI PRACTICE ANGULAR\\JWT_AUTH_2\\BACK_UI\\src\\app\\services\\api.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Movie } from '../models/movie-model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  private baseUrl:string = \"https://localhost:7034/api/User/\"\n  private baseUrl2:string = \"https://localhost:7034/api/Movie\"\n  constructor(private http: HttpClient) { }\n\n  getUsers(){\n    return this.http.get<any>(this.baseUrl);\n  }\n\n  getMovies(){\n    return this.http.get<Movie[]>(\"https://localhost:7034/api/Movie\");\n  }\n\n  getMovieById(id:number) : Observable<Movie>\n   {\n      return this.http.get<Movie>(this.baseUrl2 + 'get-movie/'+id);\n   }\n  \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}