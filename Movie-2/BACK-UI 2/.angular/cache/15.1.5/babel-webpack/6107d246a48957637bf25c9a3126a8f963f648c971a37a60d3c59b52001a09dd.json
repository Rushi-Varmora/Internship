{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class UserStoreService {\n  constructor() {\n    this.fullname$ = new BehaviorSubject(\"\");\n    this.role$ = new BehaviorSubject(\"\");\n  }\n  getRoleFromStore() {\n    return this.role$.asObservable();\n  }\n  setRoleForStore(role) {\n    this.role$.next(role);\n  }\n  getFullNameFromStore() {\n    return this.fullname$.asObservable();\n  }\n  setFullNameForStore(fullname) {\n    this.fullname$.next(fullname);\n  }\n}\nUserStoreService.ɵfac = function UserStoreService_Factory(t) {\n  return new (t || UserStoreService)();\n};\nUserStoreService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserStoreService,\n  factory: UserStoreService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAASA,eAAe,QAAQ,MAAM;;AAKtC,OAAM,MAAOC,gBAAgB;EAM3BC;IAJQ,cAAS,GAAG,IAAIF,eAAe,CAAS,EAAE,CAAC;IAC3C,UAAK,GAAG,IAAIA,eAAe,CAAS,EAAE,CAAC;EAG/B;EAETG,gBAAgB;IACrB,OAAO,IAAI,CAACC,KAAK,CAACC,YAAY,EAAE;EAElC;EAEOC,eAAe,CAACC,IAAW;IAChC,IAAI,CAACH,KAAK,CAACI,IAAI,CAACD,IAAI,CAAC;EACvB;EAEOE,oBAAoB;IACzB,OAAO,IAAI,CAACC,SAAS,CAACL,YAAY,EAAE;EACtC;EAEOM,mBAAmB,CAACC,QAAiB;IAC1C,IAAI,CAACF,SAAS,CAACF,IAAI,CAACI,QAAQ,CAAC;EAC/B;;AAvBWX,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;SAAhBA,gBAAgB;EAAAY,SAAhBZ,gBAAgB;EAAAa,YAFf;AAAM","names":["BehaviorSubject","UserStoreService","constructor","getRoleFromStore","role$","asObservable","setRoleForStore","role","next","getFullNameFromStore","fullname$","setFullNameForStore","fullname","factory","providedIn"],"sourceRoot":"","sources":["F:\\RUSHI PRACTICE ANGULAR\\JWT_AUTH_2\\BACK_UI\\src\\app\\services\\user-store.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserStoreService {\n\n  private fullname$ = new BehaviorSubject<string>(\"\");\n  private role$ = new BehaviorSubject<string>(\"\");\n\n\n  constructor() { }\n\n  public getRoleFromStore(){\n    return this.role$.asObservable();\n    \n  }\n\n  public setRoleForStore(role:string){\n    this.role$.next(role);\n  }\n\n  public getFullNameFromStore(){\n    return this.fullname$.asObservable();\n  }\n\n  public setFullNameForStore(fullname : string){\n    this.fullname$.next(fullname);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}